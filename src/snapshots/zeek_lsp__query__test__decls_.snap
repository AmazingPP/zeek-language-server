---
source: src/query.rs
assertion_line: 522
expression: root_decls

---
[
    Decl {
        module: String(
            "test",
        ),
        id: "x",
        fqid: "test::x",
        kind: Const,
        is_export: Some(
            true,
        ),
        range: Range {
            start: Position {
                line: 3,
                character: 18,
            },
            end: Position {
                line: 3,
                character: 37,
            },
        },
        selection_range: Range {
            start: Position {
                line: 3,
                character: 24,
            },
            end: Position {
                line: 3,
                character: 25,
            },
        },
        documentation: "```zeek\nconst x = 1 &redef;\n```",
        uri: Url {
            scheme: "file",
            cannot_be_a_base: false,
            username: "",
            password: None,
            host: None,
            port: None,
            path: "/foo/bar.zeek",
            query: None,
            fragment: None,
        },
    },
    Decl {
        module: String(
            "test",
        ),
        id: "y",
        fqid: "test::y",
        kind: Global,
        is_export: Some(
            true,
        ),
        range: Range {
            start: Position {
                line: 4,
                character: 18,
            },
            end: Position {
                line: 4,
                character: 31,
            },
        },
        selection_range: Range {
            start: Position {
                line: 4,
                character: 25,
            },
            end: Position {
                line: 4,
                character: 26,
            },
        },
        documentation: "```zeek\nglobal y = 1;\n```",
        uri: Url {
            scheme: "file",
            cannot_be_a_base: false,
            username: "",
            password: None,
            host: None,
            port: None,
            path: "/foo/bar.zeek",
            query: None,
            fragment: None,
        },
    },
    Decl {
        module: String(
            "test",
        ),
        id: "Y",
        fqid: "test::Y",
        kind: Type(
            [
                Decl {
                    module: None,
                    id: "y",
                    fqid: "test::Y::y",
                    kind: Variable,
                    is_export: None,
                    range: Range {
                        start: Position {
                            line: 11,
                            character: 18,
                        },
                        end: Position {
                            line: 11,
                            character: 19,
                        },
                    },
                    selection_range: Range {
                        start: Position {
                            line: 11,
                            character: 18,
                        },
                        end: Position {
                            line: 11,
                            character: 19,
                        },
                    },
                    documentation: "A field.\n```zeek\n# In test::Y\ny: vector of count &optional;\n```",
                    uri: Url {
                        scheme: "file",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: None,
                        port: None,
                        path: "/foo/bar.zeek",
                        query: None,
                        fragment: None,
                    },
                },
            ],
        ),
        is_export: Some(
            false,
        ),
        range: Range {
            start: Position {
                line: 9,
                character: 14,
            },
            end: Position {
                line: 12,
                character: 16,
            },
        },
        selection_range: Range {
            start: Position {
                line: 9,
                character: 19,
            },
            end: Position {
                line: 9,
                character: 20,
            },
        },
        documentation: "Y does the y.\nIt takes no arguments.\nBut it also has a field y\n```zeek\ntype Y: record {\n                  ## A field.\n                  y: vector of count &optional;\n              };\n```",
        uri: Url {
            scheme: "file",
            cannot_be_a_base: false,
            username: "",
            password: None,
            host: None,
            port: None,
            path: "/foo/bar.zeek",
            query: None,
            fragment: None,
        },
    },
    Decl {
        module: String(
            "bar",
        ),
        id: "zeek_init",
        fqid: "bar::zeek_init",
        kind: Event,
        is_export: Some(
            false,
        ),
        range: Range {
            start: Position {
                line: 15,
                character: 14,
            },
            end: Position {
                line: 18,
                character: 15,
            },
        },
        selection_range: Range {
            start: Position {
                line: 15,
                character: 20,
            },
            end: Position {
                line: 15,
                character: 29,
            },
        },
        documentation: "```zeek\nevent zeek_init() { local x=1; \n\n                  # Comment.\n              }\n```",
        uri: Url {
            scheme: "file",
            cannot_be_a_base: false,
            username: "",
            password: None,
            host: None,
            port: None,
            path: "/foo/bar.zeek",
            query: None,
            fragment: None,
        },
    },
]
